"use strict";(self.webpackChunktunit_docs_site=self.webpackChunktunit_docs_site||[]).push([[4956],{8903:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var s=n(4848),r=n(8453);const o={sidebar_position:3},i="Running your tests",l={id:"tutorial-basics/running-your-tests",title:"Running your tests",description:"As TUnit is built on-top of the newer Microsoft.Testing.Platform, and combined with the fact that TUnit tests are source generated, running your tests is available in a variety of ways.",source:"@site/docs/tutorial-basics/running-your-tests.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/running-your-tests",permalink:"/TUnit/docs/tutorial-basics/running-your-tests",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Writing your first test",permalink:"/TUnit/docs/tutorial-basics/writing-your-first-test"},next:{title:"Data Driven Tests",permalink:"/TUnit/docs/tutorial-basics/data-driven-tests"}},d={},a=[{value:"dotnet run",id:"dotnet-run",level:2},{value:"dotnet test",id:"dotnet-test",level:2},{value:"dotnet exec",id:"dotnet-exec",level:2},{value:"Published Test Project",id:"published-test-project",level:2},{value:"Visual Studio",id:"visual-studio",level:2},{value:"Rider",id:"rider",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"running-your-tests",children:"Running your tests"})}),"\n",(0,s.jsx)(t.p,{children:"As TUnit is built on-top of the newer Microsoft.Testing.Platform, and combined with the fact that TUnit tests are source generated, running your tests is available in a variety of ways."}),"\n",(0,s.jsx)(t.h2,{id:"dotnet-run",children:(0,s.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-run",children:"dotnet run"})}),"\n",(0,s.jsxs)(t.p,{children:["For a simple execution of a project, ",(0,s.jsx)(t.code,{children:"dotnet run"})," is the preferred method, allowing easier passing in of command line flags."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:"cd 'C:/Your/Test/Directory'\ndotnet run -c Release --report-trx --coverage\n"})}),"\n",(0,s.jsx)(t.h2,{id:"dotnet-test",children:(0,s.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-test",children:"dotnet test"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"dotnet test"})," requires any command line flags to be specified as application arguments, meaning after a ",(0,s.jsx)(t.code,{children:"--"})," - Otherwise you'll get an error about unknown switches."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:"cd 'C:/Your/Test/Directory'\ndotnet test -c Release -- --report-trx --coverage\n"})}),"\n",(0,s.jsx)(t.h2,{id:"dotnet-exec",children:(0,s.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet",children:"dotnet exec"})}),"\n",(0,s.jsxs)(t.p,{children:["If your test project has already been built, you can use ",(0,s.jsx)(t.code,{children:"dotnet exec"})," or just ",(0,s.jsx)(t.code,{children:"dotnet"})," with the ",(0,s.jsx)(t.code,{children:".dll"})," path"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:"cd 'C:/Your/Test/Directory/bin/Release/net8.0'\ndotnet exec YourTestProject.dll --report-trx --coverage\n"})}),"\n",(0,s.jsx)(t.p,{children:"or"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:"cd 'C:/Your/Test/Directory/bin/Release/net8.0'\ndotnet YourTestProject.dll --report-trx --coverage\n"})}),"\n",(0,s.jsx)(t.h2,{id:"published-test-project",children:"Published Test Project"}),"\n",(0,s.jsxs)(t.p,{children:["When you publish your test project, you'll be given an executable.\nOn windows this'll be a ",(0,s.jsx)(t.code,{children:".exe"})," and on Linux/MacOS there'll be no extension."]}),"\n",(0,s.jsx)(t.p,{children:"This can be invoked directly and passed any flags."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-powershell",children:"cd 'C:/Your/Test/Directory/bin/Release/net8.0/win-x64/publish'\n./YourTestProject.exe --report-trx --coverage\n"})}),"\n",(0,s.jsx)(t.h1,{id:"ide",children:"IDE"}),"\n",(0,s.jsx)(t.p,{children:"As of August 2024, IDE support is still in development"}),"\n",(0,s.jsx)(t.h2,{id:"visual-studio",children:"Visual Studio"}),"\n",(0,s.jsx)(t.p,{children:"If you install Visual Studio, you can navigate to the preview/experimental options and enable the testing server option. Restart Visual Studio, build your test project, and the test explorer should show your tests."}),"\n",(0,s.jsx)(t.h2,{id:"rider",children:"Rider"}),"\n",(0,s.jsx)(t.p,{children:"Not yet supported, but in development I believe."})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var s=n(6540);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);